{"version":3,"file":"static/js/511.f9bbff3d.chunk.js","mappings":"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","sources":["../node_modules/@firebase/util/src/crypt.ts","../node_modules/@firebase/util/src/environment.ts","../node_modules/@firebase/util/src/defaults.ts","../node_modules/@firebase/util/src/deferred.ts","../node_modules/@firebase/util/src/errors.ts","../node_modules/@firebase/util/src/obj.ts","../node_modules/@firebase/util/src/compat.ts","../node_modules/react-spinners/BarLoader.js","../node_modules/react-spinners/helpers/colors.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@firebase/logger/src/logger.ts","../node_modules/@firebase/app/node_modules/idb/build/wrap-idb-value.js","../node_modules/@firebase/app/node_modules/idb/build/index.js","../node_modules/@firebase/app/src/platformLoggerService.ts","../node_modules/@firebase/app/src/logger.ts","../node_modules/@firebase/app/src/constants.ts","../node_modules/@firebase/app/src/internal.ts","../node_modules/@firebase/app/src/errors.ts","../node_modules/@firebase/app/src/firebaseApp.ts","../node_modules/@firebase/app/src/api.ts","../node_modules/@firebase/app/src/indexeddb.ts","../node_modules/@firebase/app/src/heartbeatService.ts","../node_modules/@firebase/app/src/registerCoreComponents.ts","../node_modules/@firebase/app/src/index.ts","../node_modules/@firebase/component/src/component.ts","../node_modules/@firebase/component/src/constants.ts","../node_modules/@firebase/component/src/provider.ts","../node_modules/@firebase/component/src/component_container.ts","../node_modules/firebase/app/index.ts","../node_modules/@firebase/installations/node_modules/idb/build/wrap-idb-value.js","../node_modules/@firebase/installations/node_modules/idb/build/index.js","../node_modules/@firebase/installations/src/util/constants.ts","../node_modules/@firebase/installations/src/util/errors.ts","../node_modules/@firebase/installations/src/functions/common.ts","../node_modules/@firebase/installations/src/functions/create-installation-request.ts","../node_modules/@firebase/installations/src/util/sleep.ts","../node_modules/@firebase/installations/src/helpers/generate-fid.ts","../node_modules/@firebase/installations/src/helpers/buffer-to-base64-url-safe.ts","../node_modules/@firebase/installations/src/util/get-key.ts","../node_modules/@firebase/installations/src/helpers/fid-changed.ts","../node_modules/@firebase/installations/src/helpers/idb-manager.ts","../node_modules/@firebase/installations/src/helpers/get-installation-entry.ts","../node_modules/@firebase/installations/src/functions/generate-auth-token-request.ts","../node_modules/@firebase/installations/src/helpers/refresh-auth-token.ts","../node_modules/@firebase/installations/src/api/get-token.ts","../node_modules/@firebase/installations/src/api/get-id.ts","../node_modules/@firebase/installations/src/functions/delete-installation-request.ts","../node_modules/@firebase/installations/src/helpers/extract-app-config.ts","../node_modules/@firebase/installations/src/functions/config.ts","../node_modules/@firebase/installations/src/index.ts","../node_modules/@firebase/messaging/node_modules/idb/build/wrap-idb-value.js","../node_modules/@firebase/messaging/node_modules/idb/build/index.js","../node_modules/@firebase/messaging/src/util/constants.ts","../node_modules/@firebase/messaging/src/interfaces/internal-message-payload.ts","../node_modules/@firebase/messaging/src/helpers/array-base64-translator.ts","../node_modules/@firebase/messaging/src/helpers/migrate-old-database.ts","../node_modules/@firebase/messaging/src/internals/idb-manager.ts","../node_modules/@firebase/messaging/src/util/errors.ts","../node_modules/@firebase/messaging/src/internals/requests.ts","../node_modules/@firebase/messaging/src/internals/token-manager.ts","../node_modules/@firebase/messaging/src/helpers/externalizePayload.ts","../node_modules/@firebase/messaging/src/helpers/is-console-message.ts","../node_modules/@firebase/messaging/src/helpers/logToFirelog.ts","../node_modules/@firebase/messaging/src/helpers/extract-app-config.ts","../node_modules/@firebase/messaging/src/messaging-service.ts","../node_modules/@firebase/messaging/src/helpers/registerDefaultSw.ts","../node_modules/@firebase/messaging/src/helpers/updateSwReg.ts","../node_modules/@firebase/messaging/src/helpers/updateVapidKey.ts","../node_modules/@firebase/messaging/src/api/getToken.ts","../node_modules/@firebase/messaging/src/helpers/logToScion.ts","../node_modules/@firebase/messaging/src/listeners/window-listener.ts","../node_modules/@firebase/messaging/src/helpers/register.ts","../node_modules/@firebase/messaging/src/api/isSupported.ts","../node_modules/@firebase/messaging/src/api/deleteToken.ts","../node_modules/@firebase/messaging/src/api.ts","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","../node_modules/src/useInView.tsx"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './environment';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process.env.__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process.env.__FIREBASE_DEFAULTS_PATH__\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n */\nconst getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar unitConverter_1 = require(\"./helpers/unitConverter\");\nvar animation_1 = require(\"./helpers/animation\");\nvar colors_1 = require(\"./helpers/colors\");\nvar long = (0, animation_1.createAnimation)(\"BarLoader\", \"0% {left: -35%;right: 100%} 60% {left: 100%;right: -90%} 100% {left: 100%;right: -90%}\", \"long\");\nvar short = (0, animation_1.createAnimation)(\"BarLoader\", \"0% {left: -200%;right: 100%} 60% {left: 107%;right: -8%} 100% {left: 107%;right: -8%}\", \"short\");\nfunction BarLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.height, height = _f === void 0 ? 4 : _f, _g = _a.width, width = _g === void 0 ? 100 : _g, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"height\", \"width\"]);\n    var wrapper = __assign({ display: \"inherit\", position: \"relative\", width: (0, unitConverter_1.cssValue)(width), height: (0, unitConverter_1.cssValue)(height), overflow: \"hidden\", backgroundColor: (0, colors_1.calculateRgba)(color, 0.2), backgroundClip: \"padding-box\" }, cssOverride);\n    var style = function (i) {\n        return {\n            position: \"absolute\",\n            height: (0, unitConverter_1.cssValue)(height),\n            overflow: \"hidden\",\n            backgroundColor: color,\n            backgroundClip: \"padding-box\",\n            display: \"block\",\n            borderRadius: 2,\n            willChange: \"left, right\",\n            animationFillMode: \"forwards\",\n            animation: \"\".concat(i === 1 ? long : short, \" \").concat(2.1 / speedMultiplier, \"s \").concat(i === 2 ? \"\".concat(1.15 / speedMultiplier, \"s\") : \"\", \" \").concat(i === 1 ? \"cubic-bezier(0.65, 0.815, 0.735, 0.395)\" : \"cubic-bezier(0.165, 0.84, 0.44, 1)\", \" infinite\"),\n        };\n    };\n    if (!loading) {\n        return null;\n    }\n    return (React.createElement(\"span\", __assign({ style: wrapper }, additionalprops),\n        React.createElement(\"span\", { style: style(1) }),\n        React.createElement(\"span\", { style: style(2) })));\n}\nexports.default = BarLoader;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateRgba = void 0;\nvar BasicColors;\n(function (BasicColors) {\n    BasicColors[\"maroon\"] = \"#800000\";\n    BasicColors[\"red\"] = \"#FF0000\";\n    BasicColors[\"orange\"] = \"#FFA500\";\n    BasicColors[\"yellow\"] = \"#FFFF00\";\n    BasicColors[\"olive\"] = \"#808000\";\n    BasicColors[\"green\"] = \"#008000\";\n    BasicColors[\"purple\"] = \"#800080\";\n    BasicColors[\"fuchsia\"] = \"#FF00FF\";\n    BasicColors[\"lime\"] = \"#00FF00\";\n    BasicColors[\"teal\"] = \"#008080\";\n    BasicColors[\"aqua\"] = \"#00FFFF\";\n    BasicColors[\"blue\"] = \"#0000FF\";\n    BasicColors[\"navy\"] = \"#000080\";\n    BasicColors[\"black\"] = \"#000000\";\n    BasicColors[\"gray\"] = \"#808080\";\n    BasicColors[\"silver\"] = \"#C0C0C0\";\n    BasicColors[\"white\"] = \"#FFFFFF\";\n})(BasicColors || (BasicColors = {}));\nvar calculateRgba = function (color, opacity) {\n    if (Object.keys(BasicColors).includes(color)) {\n        color = BasicColors[color];\n    }\n    if (color[0] === \"#\") {\n        color = color.slice(1);\n    }\n    if (color.length === 3) {\n        var res_1 = \"\";\n        color.split(\"\").forEach(function (c) {\n            res_1 += c;\n            res_1 += c;\n        });\n        color = res_1;\n    }\n    var rgbValues = (color.match(/.{2}/g) || []).map(function (hex) { return parseInt(hex, 16); }).join(\", \");\n    return \"rgba(\".concat(rgbValues, \", \").concat(opacity, \")\");\n};\nexports.calculateRgba = calculateRgba;\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../../package.json';\n\nexport const PENDING_TIMEOUT_MS = 10000;\n\nexport const PACKAGE_VERSION = `w:${version}`;\nexport const INTERNAL_AUTH_VERSION = 'FIS_v2';\n\nexport const INSTALLATIONS_API_URL =\n  'https://firebaseinstallations.googleapis.com/v1';\n\nexport const TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\n\nexport const SERVICE = 'installations';\nexport const SERVICE_NAME = 'Installations';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from './constants';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  NOT_REGISTERED = 'not-registered',\n  INSTALLATION_NOT_FOUND = 'installation-not-found',\n  REQUEST_FAILED = 'request-failed',\n  APP_OFFLINE = 'app-offline',\n  DELETE_PENDING_REGISTRATION = 'delete-pending-registration'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.NOT_REGISTERED]: 'Firebase Installation is not registered.',\n  [ErrorCode.INSTALLATION_NOT_FOUND]: 'Firebase Installation not found.',\n  [ErrorCode.REQUEST_FAILED]:\n    '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n  [ErrorCode.APP_OFFLINE]: 'Could not process request. Application offline.',\n  [ErrorCode.DELETE_PENDING_REGISTRATION]:\n    \"Can't delete installation while there is a pending registration request.\"\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.REQUEST_FAILED]: {\n    requestName: string;\n    [index: string]: string | number; // to make Typescript 3.8 happy\n  } & ServerErrorData;\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n\nexport interface ServerErrorData {\n  serverCode: number;\n  serverMessage: string;\n  serverStatus: string;\n}\n\nexport type ServerError = FirebaseError & { customData: ServerErrorData };\n\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nexport function isServerError(error: unknown): error is ServerError {\n  return (\n    error instanceof FirebaseError &&\n    error.code.includes(ErrorCode.REQUEST_FAILED)\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport {\n  INSTALLATIONS_API_URL,\n  INTERNAL_AUTH_VERSION\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { AppConfig } from '../interfaces/installation-impl';\n\nexport function getInstallationsEndpoint({ projectId }: AppConfig): string {\n  return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\n\nexport function extractAuthTokenInfoFromResponse(\n  response: GenerateAuthTokenResponse\n): CompletedAuthToken {\n  return {\n    token: response.token,\n    requestStatus: RequestStatus.COMPLETED,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\n\nexport async function getErrorFromResponse(\n  requestName: string,\n  response: Response\n): Promise<FirebaseError> {\n  const responseJson: ErrorResponse = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(ErrorCode.REQUEST_FAILED, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n  });\n}\n\nexport function getHeaders({ apiKey }: AppConfig): Headers {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\nexport function getHeadersWithAuth(\n  appConfig: AppConfig,\n  { refreshToken }: RegisteredInstallationEntry\n): Headers {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n\nexport interface ErrorResponse {\n  error: {\n    code: number;\n    message: string;\n    status: string;\n  };\n}\n\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nexport async function retryIfServerError(\n  fn: () => Promise<Response>\n): Promise<Response> {\n  const result = await fn();\n\n  if (result.status >= 500 && result.status < 600) {\n    // Internal Server Error. Retry request.\n    return fn();\n  }\n\n  return result;\n}\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn: string): number {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\n\nfunction getAuthorizationHeader(refreshToken: string): string {\n  return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CreateInstallationResponse } from '../interfaces/api-response';\nimport {\n  InProgressInstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { INTERNAL_AUTH_VERSION, PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeaders,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\n\nexport async function createInstallationRequest(\n  { appConfig, heartbeatServiceProvider }: FirebaseInstallationsImpl,\n  { fid }: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  const endpoint = getInstallationsEndpoint(appConfig);\n\n  const headers = getHeaders(appConfig);\n\n  // If heartbeat service exists, add the heartbeat string to the header.\n  const heartbeatService = heartbeatServiceProvider.getImmediate({\n    optional: true\n  });\n  if (heartbeatService) {\n    const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers.append('x-firebase-client', heartbeatsHeader);\n    }\n  }\n\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: CreateInstallationResponse = await response.json();\n    const registeredInstallationEntry: RegisteredInstallationEntry = {\n      fid: responseValue.fid || fid,\n      registrationStatus: RequestStatus.COMPLETED,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n    };\n    return registeredInstallationEntry;\n  } else {\n    throw await getErrorFromResponse('Create Installation', response);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bufferToBase64UrlSafe } from './buffer-to-base64-url-safe';\n\nexport const VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nexport const INVALID_FID = '';\n\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nexport function generateFid(): string {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    const fidByteArray = new Uint8Array(17);\n    const crypto =\n      self.crypto || (self as unknown as { msCrypto: Crypto }).msCrypto;\n    crypto.getRandomValues(fidByteArray);\n\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n\n    const fid = encode(fidByteArray);\n\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray: Uint8Array): string {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function bufferToBase64UrlSafe(array: Uint8Array): string {\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/installation-impl';\n\n/** Returns a string key that can be used to identify the app. */\nexport function getKey(appConfig: AppConfig): string {\n  return `${appConfig.appName}!${appConfig.appId}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getKey } from '../util/get-key';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { IdChangeCallbackFn } from '../api';\n\nconst fidChangeCallbacks: Map<string, Set<IdChangeCallbackFn>> = new Map();\n\n/**\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\n * change to other tabs.\n */\nexport function fidChanged(appConfig: AppConfig, fid: string): void {\n  const key = getKey(appConfig);\n\n  callFidChangeCallbacks(key, fid);\n  broadcastFidChange(key, fid);\n}\n\nexport function addCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  // Open the broadcast channel if it's not already open,\n  // to be able to listen to change events from other tabs.\n  getBroadcastChannel();\n\n  const key = getKey(appConfig);\n\n  let callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    callbackSet = new Set();\n    fidChangeCallbacks.set(key, callbackSet);\n  }\n  callbackSet.add(callback);\n}\n\nexport function removeCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  const key = getKey(appConfig);\n\n  const callbackSet = fidChangeCallbacks.get(key);\n\n  if (!callbackSet) {\n    return;\n  }\n\n  callbackSet.delete(callback);\n  if (callbackSet.size === 0) {\n    fidChangeCallbacks.delete(key);\n  }\n\n  // Close broadcast channel if there are no more callbacks.\n  closeBroadcastChannel();\n}\n\nfunction callFidChangeCallbacks(key: string, fid: string): void {\n  const callbacks = fidChangeCallbacks.get(key);\n  if (!callbacks) {\n    return;\n  }\n\n  for (const callback of callbacks) {\n    callback(fid);\n  }\n}\n\nfunction broadcastFidChange(key: string, fid: string): void {\n  const channel = getBroadcastChannel();\n  if (channel) {\n    channel.postMessage({ key, fid });\n  }\n  closeBroadcastChannel();\n}\n\nlet broadcastChannel: BroadcastChannel | null = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\nfunction getBroadcastChannel(): BroadcastChannel | null {\n  if (!broadcastChannel && 'BroadcastChannel' in self) {\n    broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n    broadcastChannel.onmessage = e => {\n      callFidChangeCallbacks(e.data.key, e.data.fid);\n    };\n  }\n  return broadcastChannel;\n}\n\nfunction closeBroadcastChannel(): void {\n  if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n    broadcastChannel.close();\n    broadcastChannel = null;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DBSchema, IDBPDatabase, openDB } from 'idb';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { InstallationEntry } from '../interfaces/installation-entry';\nimport { getKey } from '../util/get-key';\nimport { fidChanged } from './fid-changed';\n\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\n\ninterface InstallationsDB extends DBSchema {\n  'firebase-installations-store': {\n    key: string;\n    value: InstallationEntry | undefined;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<InstallationsDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<InstallationsDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function get(\n  appConfig: AppConfig\n): Promise<InstallationEntry | undefined> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  return db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key) as Promise<InstallationEntry>;\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function set<ValueType extends InstallationEntry>(\n  appConfig: AppConfig,\n  value: ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const objectStore = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue = (await objectStore.get(key)) as InstallationEntry;\n  await objectStore.put(value, key);\n  await tx.done;\n\n  if (!oldValue || oldValue.fid !== value.fid) {\n    fidChanged(appConfig, value.fid);\n  }\n\n  return value;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function remove(appConfig: AppConfig): Promise<void> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.done;\n}\n\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nexport async function update<ValueType extends InstallationEntry | undefined>(\n  appConfig: AppConfig,\n  updateFn: (previousValue: InstallationEntry | undefined) => ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const store = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue: InstallationEntry | undefined = (await store.get(\n    key\n  )) as InstallationEntry;\n  const newValue = updateFn(oldValue);\n\n  if (newValue === undefined) {\n    await store.delete(key);\n  } else {\n    await store.put(newValue, key);\n  }\n  await tx.done;\n\n  if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\n    fidChanged(appConfig, newValue.fid);\n  }\n\n  return newValue;\n}\n\nexport async function clear(): Promise<void> {\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).clear();\n  await tx.done;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createInstallationRequest } from '../functions/create-installation-request';\nimport {\n  AppConfig,\n  FirebaseInstallationsImpl\n} from '../interfaces/installation-impl';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { generateFid, INVALID_FID } from './generate-fid';\nimport { remove, set, update } from './idb-manager';\n\nexport interface InstallationEntryWithRegistrationPromise {\n  installationEntry: InstallationEntry;\n  /** Exist iff the installationEntry is not registered. */\n  registrationPromise?: Promise<RegisteredInstallationEntry>;\n}\n\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nexport async function getInstallationEntry(\n  installations: FirebaseInstallationsImpl\n): Promise<InstallationEntryWithRegistrationPromise> {\n  let registrationPromise: Promise<RegisteredInstallationEntry> | undefined;\n\n  const installationEntry = await update(installations.appConfig, oldEntry => {\n    const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n    const entryWithPromise = triggerRegistrationIfNecessary(\n      installations,\n      installationEntry\n    );\n    registrationPromise = entryWithPromise.registrationPromise;\n    return entryWithPromise.installationEntry;\n  });\n\n  if (installationEntry.fid === INVALID_FID) {\n    // FID generation failed. Waiting for the FID from the server.\n    return { installationEntry: await registrationPromise! };\n  }\n\n  return {\n    installationEntry,\n    registrationPromise\n  };\n}\n\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(\n  oldEntry: InstallationEntry | undefined\n): InstallationEntry {\n  const entry: InstallationEntry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: RequestStatus.NOT_STARTED\n  };\n\n  return clearTimedOutRequest(entry);\n}\n\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n *\n * If registrationPromise does not exist, the installationEntry is guaranteed\n * to be registered.\n */\nfunction triggerRegistrationIfNecessary(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: InstallationEntry\n): InstallationEntryWithRegistrationPromise {\n  if (installationEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(\n        ERROR_FACTORY.create(ErrorCode.APP_OFFLINE)\n      );\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry: InProgressInstallationEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: RequestStatus.IN_PROGRESS,\n      registrationTime: Date.now()\n    };\n    const registrationPromise = registerInstallation(\n      installations,\n      inProgressEntry\n    );\n    return { installationEntry: inProgressEntry, registrationPromise };\n  } else if (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS\n  ) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(installations)\n    };\n  } else {\n    return { installationEntry };\n  }\n}\n\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  try {\n    const registeredInstallationEntry = await createInstallationRequest(\n      installations,\n      installationEntry\n    );\n    return set(installations.appConfig, registeredInstallationEntry);\n  } catch (e) {\n    if (isServerError(e) && e.customData.serverCode === 409) {\n      // Server returned a \"FID can not be used\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      // Registration failed. Set FID as not registered.\n      await set(installations.appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: RequestStatus.NOT_STARTED\n      });\n    }\n    throw e;\n  }\n}\n\n/** Call if FID registration is pending in another request. */\nasync function waitUntilFidRegistration(\n  installations: FirebaseInstallationsImpl\n): Promise<RegisteredInstallationEntry> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry: InstallationEntry = await updateInstallationRequest(\n    installations.appConfig\n  );\n  while (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n    // createInstallation request still in progress.\n    await sleep(100);\n\n    entry = await updateInstallationRequest(installations.appConfig);\n  }\n\n  if (entry.registrationStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    const { installationEntry, registrationPromise } =\n      await getInstallationEntry(installations);\n\n    if (registrationPromise) {\n      return registrationPromise;\n    } else {\n      // if there is no registrationPromise, entry is registered.\n      return installationEntry as RegisteredInstallationEntry;\n    }\n  }\n\n  return entry;\n}\n\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(\n  appConfig: AppConfig\n): Promise<InstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(ErrorCode.INSTALLATION_NOT_FOUND);\n    }\n    return clearTimedOutRequest(oldEntry);\n  });\n}\n\nfunction clearTimedOutRequest(entry: InstallationEntry): InstallationEntry {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: RequestStatus.NOT_STARTED\n    };\n  }\n\n  return entry;\n}\n\nfunction hasInstallationRequestTimedOut(\n  installationEntry: InstallationEntry\n): boolean {\n  return (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS &&\n    installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport {\n  FirebaseInstallationsImpl,\n  AppConfig\n} from '../interfaces/installation-impl';\n\nexport async function generateAuthTokenRequest(\n  { appConfig, heartbeatServiceProvider }: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n\n  // If heartbeat service exists, add the heartbeat string to the header.\n  const heartbeatService = heartbeatServiceProvider.getImmediate({\n    optional: true\n  });\n  if (heartbeatService) {\n    const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers.append('x-firebase-client', heartbeatsHeader);\n    }\n  }\n\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION,\n      appId: appConfig.appId\n    }\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: GenerateAuthTokenResponse = await response.json();\n    const completedAuthToken: CompletedAuthToken =\n      extractAuthTokenInfoFromResponse(responseValue);\n    return completedAuthToken;\n  } else {\n    throw await getErrorFromResponse('Generate Auth Token', response);\n  }\n}\n\nfunction getGenerateAuthTokenEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { generateAuthTokenRequest } from '../functions/generate-auth-token-request';\nimport {\n  AppConfig,\n  FirebaseInstallationsImpl\n} from '../interfaces/installation-impl';\nimport {\n  AuthToken,\n  CompletedAuthToken,\n  InProgressAuthToken,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS, TOKEN_EXPIRATION_BUFFER } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { remove, set, update } from './idb-manager';\n\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nexport async function refreshAuthToken(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh = false\n): Promise<CompletedAuthToken> {\n  let tokenPromise: Promise<CompletedAuthToken> | undefined;\n  const entry = await update(installations.appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n      // There is a valid token in the DB.\n      return oldEntry;\n    } else if (oldAuthToken.requestStatus === RequestStatus.IN_PROGRESS) {\n      // There already is a token request in progress.\n      tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\n      return oldEntry;\n    } else {\n      // No token or token expired.\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      }\n\n      const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n      tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\n      return inProgressEntry;\n    }\n  });\n\n  const authToken = tokenPromise\n    ? await tokenPromise\n    : (entry.authToken as CompletedAuthToken);\n  return authToken;\n}\n\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n *\n * Waits until the current pending request finishes. If the request times out,\n * tries once in this thread as well.\n */\nasync function waitUntilAuthTokenRequest(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh: boolean\n): Promise<CompletedAuthToken> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry = await updateAuthTokenRequest(installations.appConfig);\n  while (entry.authToken.requestStatus === RequestStatus.IN_PROGRESS) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n\n    entry = await updateAuthTokenRequest(installations.appConfig);\n  }\n\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    return refreshAuthToken(installations, forceRefresh);\n  } else {\n    return authToken;\n  }\n}\n\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return {\n        ...oldEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n    }\n\n    return oldEntry;\n  });\n}\n\nasync function fetchAuthTokenFromServer(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  try {\n    const authToken = await generateAuthTokenRequest(\n      installations,\n      installationEntry\n    );\n    const updatedInstallationEntry: RegisteredInstallationEntry = {\n      ...installationEntry,\n      authToken\n    };\n    await set(installations.appConfig, updatedInstallationEntry);\n    return authToken;\n  } catch (e) {\n    if (\n      isServerError(e) &&\n      (e.customData.serverCode === 401 || e.customData.serverCode === 404)\n    ) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      const updatedInstallationEntry: RegisteredInstallationEntry = {\n        ...installationEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n      await set(installations.appConfig, updatedInstallationEntry);\n    }\n    throw e;\n  }\n}\n\nfunction isEntryRegistered(\n  installationEntry: InstallationEntry | undefined\n): installationEntry is RegisteredInstallationEntry {\n  return (\n    installationEntry !== undefined &&\n    installationEntry.registrationStatus === RequestStatus.COMPLETED\n  );\n}\n\nfunction isAuthTokenValid(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.COMPLETED &&\n    !isAuthTokenExpired(authToken)\n  );\n}\n\nfunction isAuthTokenExpired(authToken: CompletedAuthToken): boolean {\n  const now = Date.now();\n  return (\n    now < authToken.creationTime ||\n    authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER\n  );\n}\n\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(\n  oldEntry: RegisteredInstallationEntry\n): RegisteredInstallationEntry {\n  const inProgressAuthToken: InProgressAuthToken = {\n    requestStatus: RequestStatus.IN_PROGRESS,\n    requestTime: Date.now()\n  };\n  return {\n    ...oldEntry,\n    authToken: inProgressAuthToken\n  };\n}\n\nfunction hasAuthTokenRequestTimedOut(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.IN_PROGRESS &&\n    authToken.requestTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Returns a Firebase Installations auth token, identifying the current\n * Firebase Installation.\n * @param installations - The `Installations` instance.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport async function getToken(\n  installations: Installations,\n  forceRefresh = false\n): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  await completeInstallationRegistration(installationsImpl);\n\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  const authToken = await refreshAuthToken(installationsImpl, forceRefresh);\n  return authToken.token;\n}\n\nasync function completeInstallationRegistration(\n  installations: FirebaseInstallationsImpl\n): Promise<void> {\n  const { registrationPromise } = await getInstallationEntry(installations);\n\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Creates a Firebase Installation if there isn't one for the app and\n * returns the Installation ID.\n * @param installations - The `Installations` instance.\n *\n * @public\n */\nexport async function getId(installations: Installations): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    installationsImpl\n  );\n\n  if (registrationPromise) {\n    registrationPromise.catch(console.error);\n  } else {\n    // If the installation is already registered, update the authentication\n    // token if needed.\n    refreshAuthToken(installationsImpl).catch(console.error);\n  }\n\n  return installationEntry.fid;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { RegisteredInstallationEntry } from '../interfaces/installation-entry';\nimport {\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function deleteInstallationRequest(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<void> {\n  const endpoint = getDeleteEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  const request: RequestInit = {\n    method: 'DELETE',\n    headers\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (!response.ok) {\n    throw await getErrorFromResponse('Delete Installation', response);\n  }\n}\n\nfunction getDeleteEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\nimport { FirebaseError } from '@firebase/util';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: Array<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId'\n  ];\n\n  for (const keyName of configKeys) {\n    if (!app.options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: app.options.projectId!,\n    apiKey: app.options.apiKey!,\n    appId: app.options.appId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, _getProvider } from '@firebase/app';\nimport {\n  Component,\n  ComponentType,\n  InstanceFactory,\n  ComponentContainer\n} from '@firebase/component';\nimport { getId, getToken } from '../api/index';\nimport { _FirebaseInstallationsInternal } from '../interfaces/public-types';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { extractAppConfig } from '../helpers/extract-app-config';\n\nconst INSTALLATIONS_NAME = 'installations';\nconst INSTALLATIONS_NAME_INTERNAL = 'installations-internal';\n\nconst publicFactory: InstanceFactory<'installations'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app').getImmediate();\n  // Throws if app isn't configured properly.\n  const appConfig = extractAppConfig(app);\n  const heartbeatServiceProvider = _getProvider(app, 'heartbeat');\n\n  const installationsImpl: FirebaseInstallationsImpl = {\n    app,\n    appConfig,\n    heartbeatServiceProvider,\n    _delete: () => Promise.resolve()\n  };\n  return installationsImpl;\n};\n\nconst internalFactory: InstanceFactory<'installations-internal'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app').getImmediate();\n  // Internal FIS instance relies on public FIS instance.\n  const installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\n\n  const installationsInternal: _FirebaseInstallationsInternal = {\n    getId: () => getId(installations),\n    getToken: (forceRefresh?: boolean) => getToken(installations, forceRefresh)\n  };\n  return installationsInternal;\n};\n\nexport function registerInstallations(): void {\n  _registerComponent(\n    new Component(INSTALLATIONS_NAME, publicFactory, ComponentType.PUBLIC)\n  );\n  _registerComponent(\n    new Component(\n      INSTALLATIONS_NAME_INTERNAL,\n      internalFactory,\n      ComponentType.PRIVATE\n    )\n  );\n}\n","/**\n * Firebase Installations\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerInstallations } from './functions/config';\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nexport * from './api';\nexport * from './interfaces/public-types';\n\nregisterInstallations();\nregisterVersion(name, version);\n// BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\nregisterVersion(name, version, '__BUILD_TARGET__');\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nexport const DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\nexport const DEFAULT_VAPID_KEY =\n  'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\n\nexport const ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\n\n/** Key of FCM Payload in Notification's data field. */\nexport const FCM_MSG = 'FCM_MSG';\n\nexport const CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nexport const CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\nexport const CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\n/** Set to '1' if Analytics is enabled for the campaign */\nexport const CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\nexport const TAG = 'FirebaseMessaging: ';\nexport const MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST = 1000;\nexport const MAX_RETRIES = 3;\nexport const LOG_INTERVAL_IN_MS = 86400000; //24 hour\nexport const DEFAULT_BACKOFF_TIME_MS = 5000;\n\n// FCM log source name registered at Firelog: 'FCM_CLIENT_EVENT_LOGGING'. It uniquely identifies\n// FCM's logging configuration.\nexport const FCM_LOG_SOURCE = 1249;\n\n// Defined as in proto/messaging_event.proto. Neglecting fields that are supported.\nexport const SDK_PLATFORM_WEB = 3;\nexport const EVENT_MESSAGE_DELIVERED = 1;\n\nexport enum MessageType {\n  DATA_MESSAGE = 1,\n  DISPLAY_NOTIFICATION = 3\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ANALYTICS_ENABLED,\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\n\nexport interface MessagePayloadInternal {\n  notification?: NotificationPayloadInternal;\n  data?: unknown;\n  fcmOptions?: FcmOptionsInternal;\n  messageType?: MessageType;\n  isFirebaseMessaging?: boolean;\n  from: string;\n  fcmMessageId: string;\n  // eslint-disable-next-line camelcase\n  collapse_key: string;\n}\n\nexport interface NotificationPayloadInternal extends NotificationOptions {\n  title: string;\n  // Supported in the Legacy Send API.\n  // See:https://firebase.google.com/docs/cloud-messaging/xmpp-server-ref.\n  // eslint-disable-next-line camelcase\n  click_action?: string;\n  icon?: string;\n}\n\n// Defined in\n// https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#webpushfcmoptions. Note\n// that the keys are sent to the clients in snake cases which we need to convert to camel so it can\n// be exposed as a type to match the Firebase API convention.\nexport interface FcmOptionsInternal {\n  link?: string;\n\n  // eslint-disable-next-line camelcase\n  analytics_label?: string;\n}\n\nexport enum MessageType {\n  PUSH_RECEIVED = 'push-received',\n  NOTIFICATION_CLICKED = 'notification-clicked'\n}\n\n/** Additional data of a message sent from the FN Console. */\nexport interface ConsoleMessageData {\n  [CONSOLE_CAMPAIGN_ID]: string;\n  [CONSOLE_CAMPAIGN_TIME]: string;\n  [CONSOLE_CAMPAIGN_NAME]?: string;\n  [CONSOLE_CAMPAIGN_ANALYTICS_ENABLED]?: '1';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function arrayToBase64(array: Uint8Array | ArrayBuffer): string {\n  const uint8Array = new Uint8Array(array);\n  const base64String = btoa(String.fromCharCode(...uint8Array));\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nexport function base64ToArray(base64String: string): Uint8Array {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteDB, openDB } from 'idb';\n\nimport { TokenDetails } from '../interfaces/token-details';\nimport { arrayToBase64 } from './array-base64-translator';\n\n// https://github.com/firebase/firebase-js-sdk/blob/7857c212f944a2a9eb421fd4cb7370181bc034b5/packages/messaging/src/interfaces/token-details.ts\nexport interface V2TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: string | Uint8Array;\n  subscription: PushSubscription;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  createTime?: number;\n  endpoint?: string;\n  auth?: string;\n  p256dh?: string;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/6b5b15ce4ea3df5df5df8a8b33a4e41e249c7715/packages/messaging/src/interfaces/token-details.ts\nexport interface V3TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  endpoint: string;\n  auth: ArrayBuffer;\n  p256dh: ArrayBuffer;\n  createTime: number;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/9567dba664732f681fa7fe60f5b7032bb1daf4c9/packages/messaging/src/interfaces/token-details.ts\nexport interface V4TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  endpoint: string;\n  auth: ArrayBufferLike;\n  p256dh: ArrayBufferLike;\n  createTime: number;\n}\n\nconst OLD_DB_NAME = 'fcm_token_details_db';\n/**\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\n * callback is called for all versions of the old DB.\n */\nconst OLD_DB_VERSION = 5;\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nexport async function migrateOldDatabase(\n  senderId: string\n): Promise<TokenDetails | null> {\n  if ('databases' in indexedDB) {\n    // indexedDb.databases() is an IndexedDB v3 API and does not exist in all browsers. TODO: Remove\n    // typecast when it lands in TS types.\n    const databases = await (\n      indexedDB as {\n        databases(): Promise<Array<{ name: string; version: number }>>;\n      }\n    ).databases();\n    const dbNames = databases.map(db => db.name);\n\n    if (!dbNames.includes(OLD_DB_NAME)) {\n      // old DB didn't exist, no need to open.\n      return null;\n    }\n  }\n\n  let tokenDetails: TokenDetails | null = null;\n\n  const db = await openDB(OLD_DB_NAME, OLD_DB_VERSION, {\n    upgrade: async (db, oldVersion, newVersion, upgradeTransaction) => {\n      if (oldVersion < 2) {\n        // Database too old, skip migration.\n        return;\n      }\n\n      if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n        // Database did not exist. Nothing to do.\n        return;\n      }\n\n      const objectStore = upgradeTransaction.objectStore(OLD_OBJECT_STORE_NAME);\n      const value = await objectStore.index('fcmSenderId').get(senderId);\n      await objectStore.clear();\n\n      if (!value) {\n        // No entry in the database, nothing to migrate.\n        return;\n      }\n\n      if (oldVersion === 2) {\n        const oldDetails = value as V2TokenDetails;\n\n        if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\n          return;\n        }\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime ?? Date.now(),\n          subscriptionOptions: {\n            auth: oldDetails.auth,\n            p256dh: oldDetails.p256dh,\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey:\n              typeof oldDetails.vapidKey === 'string'\n                ? oldDetails.vapidKey\n                : arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      } else if (oldVersion === 3) {\n        const oldDetails = value as V3TokenDetails;\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime,\n          subscriptionOptions: {\n            auth: arrayToBase64(oldDetails.auth),\n            p256dh: arrayToBase64(oldDetails.p256dh),\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey: arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      } else if (oldVersion === 4) {\n        const oldDetails = value as V4TokenDetails;\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime,\n          subscriptionOptions: {\n            auth: arrayToBase64(oldDetails.auth),\n            p256dh: arrayToBase64(oldDetails.p256dh),\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey: arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      }\n    }\n  });\n  db.close();\n\n  // Delete all old databases.\n  await deleteDB(OLD_DB_NAME);\n  await deleteDB('fcm_vapid_details_db');\n  await deleteDB('undefined');\n\n  return checkTokenDetails(tokenDetails) ? tokenDetails : null;\n}\n\nfunction checkTokenDetails(\n  tokenDetails: TokenDetails | null\n): tokenDetails is TokenDetails {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n  const { subscriptionOptions } = tokenDetails;\n  return (\n    typeof tokenDetails.createTime === 'number' &&\n    tokenDetails.createTime > 0 &&\n    typeof tokenDetails.token === 'string' &&\n    tokenDetails.token.length > 0 &&\n    typeof subscriptionOptions.auth === 'string' &&\n    subscriptionOptions.auth.length > 0 &&\n    typeof subscriptionOptions.p256dh === 'string' &&\n    subscriptionOptions.p256dh.length > 0 &&\n    typeof subscriptionOptions.endpoint === 'string' &&\n    subscriptionOptions.endpoint.length > 0 &&\n    typeof subscriptionOptions.swScope === 'string' &&\n    subscriptionOptions.swScope.length > 0 &&\n    typeof subscriptionOptions.vapidKey === 'string' &&\n    subscriptionOptions.vapidKey.length > 0\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DBSchema, IDBPDatabase, deleteDB, openDB } from 'idb';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { TokenDetails } from '../interfaces/token-details';\nimport { migrateOldDatabase } from '../helpers/migrate-old-database';\n\n// Exported for tests.\nexport const DATABASE_NAME = 'firebase-messaging-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\n\ninterface MessagingDB extends DBSchema {\n  'firebase-messaging-store': {\n    key: string;\n    value: TokenDetails;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<MessagingDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<MessagingDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n      upgrade: (upgradeDb, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n        // because if there are multiple versions between the old version and the current version, we\n        // want ALL the migrations that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function dbGet(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<TokenDetails | undefined> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tokenDetails = (await db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key)) as TokenDetails;\n\n  if (tokenDetails) {\n    return tokenDetails;\n  } else {\n    // Check if there is a tokenDetails object in the old DB.\n    const oldTokenDetails = await migrateOldDatabase(\n      firebaseDependencies.appConfig.senderId\n    );\n    if (oldTokenDetails) {\n      await dbSet(firebaseDependencies, oldTokenDetails);\n      return oldTokenDetails;\n    }\n  }\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function dbSet(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<TokenDetails> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n  await tx.done;\n  return tokenDetails;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function dbRemove(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<void> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.done;\n}\n\n/** Deletes the DB. Useful for tests. */\nexport async function dbDelete(): Promise<void> {\n  if (dbPromise) {\n    (await dbPromise).close();\n    await deleteDB(DATABASE_NAME);\n    dbPromise = null;\n  }\n}\n\nfunction getKey({ appConfig }: FirebaseInternalDependencies): string {\n  return appConfig.appId;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  AVAILABLE_IN_WINDOW = 'only-available-in-window',\n  AVAILABLE_IN_SW = 'only-available-in-sw',\n  PERMISSION_DEFAULT = 'permission-default',\n  PERMISSION_BLOCKED = 'permission-blocked',\n  UNSUPPORTED_BROWSER = 'unsupported-browser',\n  INDEXED_DB_UNSUPPORTED = 'indexed-db-unsupported',\n  FAILED_DEFAULT_REGISTRATION = 'failed-service-worker-registration',\n  TOKEN_SUBSCRIBE_FAILED = 'token-subscribe-failed',\n  TOKEN_SUBSCRIBE_NO_TOKEN = 'token-subscribe-no-token',\n  TOKEN_UNSUBSCRIBE_FAILED = 'token-unsubscribe-failed',\n  TOKEN_UPDATE_FAILED = 'token-update-failed',\n  TOKEN_UPDATE_NO_TOKEN = 'token-update-no-token',\n  INVALID_BG_HANDLER = 'invalid-bg-handler',\n  USE_SW_AFTER_GET_TOKEN = 'use-sw-after-get-token',\n  INVALID_SW_REGISTRATION = 'invalid-sw-registration',\n  USE_VAPID_KEY_AFTER_GET_TOKEN = 'use-vapid-key-after-get-token',\n  INVALID_VAPID_KEY = 'invalid-vapid-key'\n}\n\nexport const ERROR_MAP: ErrorMap<ErrorCode> = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.AVAILABLE_IN_WINDOW]:\n    'This method is available in a Window context.',\n  [ErrorCode.AVAILABLE_IN_SW]:\n    'This method is available in a service worker context.',\n  [ErrorCode.PERMISSION_DEFAULT]:\n    'The notification permission was not granted and dismissed instead.',\n  [ErrorCode.PERMISSION_BLOCKED]:\n    'The notification permission was not granted and blocked instead.',\n  [ErrorCode.UNSUPPORTED_BROWSER]:\n    \"This browser doesn't support the API's required to use the Firebase SDK.\",\n  [ErrorCode.INDEXED_DB_UNSUPPORTED]:\n    \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\",\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]:\n    'We are unable to register the default service worker. {$browserErrorMessage}',\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]:\n    'A problem occurred while subscribing the user to FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN]:\n    'FCM returned no token when subscribing the user to push.',\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]:\n    'A problem occurred while unsubscribing the ' +\n    'user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_FAILED]:\n    'A problem occurred while updating the user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_NO_TOKEN]:\n    'FCM returned no token when updating the user to push.',\n  [ErrorCode.USE_SW_AFTER_GET_TOKEN]:\n    'The useServiceWorker() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your service worker is used.',\n  [ErrorCode.INVALID_SW_REGISTRATION]:\n    'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\n  [ErrorCode.INVALID_BG_HANDLER]:\n    'The input to setBackgroundMessageHandler() must be a function.',\n  [ErrorCode.INVALID_VAPID_KEY]: 'The public VAPID key must be a string.',\n  [ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN]:\n    'The usePublicVapidKey() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your VAPID key is used.'\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]: { browserErrorMessage: string };\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UPDATE_FAILED]: { errorInfo: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  'messaging',\n  'Messaging',\n  ERROR_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY, ENDPOINT } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\n\nexport interface ApiResponse {\n  token?: string;\n  error?: { message: string };\n}\n\nexport interface ApiRequestBody {\n  web: {\n    endpoint: string;\n    p256dh: string;\n    auth: string;\n    applicationPubKey?: string;\n  };\n}\n\nexport async function requestGetToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(subscriptionOptions);\n\n  const subscribeOptions = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      getEndpoint(firebaseDependencies.appConfig),\n      subscribeOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: (err as Error)?.toString()\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestUpdateToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(tokenDetails.subscriptionOptions!);\n\n  const updateOptions = {\n    method: 'PATCH',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`,\n      updateOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: (err as Error)?.toString()\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestDeleteToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  token: string\n): Promise<void> {\n  const headers = await getHeaders(firebaseDependencies);\n\n  const unsubscribeOptions = {\n    method: 'DELETE',\n    headers\n  };\n\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${token}`,\n      unsubscribeOptions\n    );\n    const responseData: ApiResponse = await response.json();\n    if (responseData.error) {\n      const message = responseData.error.message;\n      throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n        errorInfo: message\n      });\n    }\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n      errorInfo: (err as Error)?.toString()\n    });\n  }\n}\n\nfunction getEndpoint({ projectId }: AppConfig): string {\n  return `${ENDPOINT}/projects/${projectId!}/registrations`;\n}\n\nasync function getHeaders({\n  appConfig,\n  installations\n}: FirebaseInternalDependencies): Promise<Headers> {\n  const authToken = await installations.getToken();\n\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': appConfig.apiKey!,\n    'x-goog-firebase-installations-auth': `FIS ${authToken}`\n  });\n}\n\nfunction getBody({\n  p256dh,\n  auth,\n  endpoint,\n  vapidKey\n}: SubscriptionOptions): ApiRequestBody {\n  const body: ApiRequestBody = {\n    web: {\n      endpoint,\n      auth,\n      p256dh\n    }\n  };\n\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n\n  return body;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\nimport {\n  arrayToBase64,\n  base64ToArray\n} from '../helpers/array-base64-translator';\nimport { dbGet, dbRemove, dbSet } from './idb-manager';\nimport {\n  requestDeleteToken,\n  requestGetToken,\n  requestUpdateToken\n} from './requests';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { MessagingService } from '../messaging-service';\n\n// UpdateRegistration will be called once every week.\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nexport async function getTokenInternal(\n  messaging: MessagingService\n): Promise<string> {\n  const pushSubscription = await getPushSubscription(\n    messaging.swRegistration!,\n    messaging.vapidKey!\n  );\n\n  const subscriptionOptions: SubscriptionOptions = {\n    vapidKey: messaging.vapidKey!,\n    swScope: messaging.swRegistration!.scope,\n    endpoint: pushSubscription.endpoint,\n    auth: arrayToBase64(pushSubscription.getKey('auth')!),\n    p256dh: arrayToBase64(pushSubscription.getKey('p256dh')!)\n  };\n\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (!tokenDetails) {\n    // No token, get a new one.\n    return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\n  } else if (\n    !isTokenValid(tokenDetails.subscriptionOptions!, subscriptionOptions)\n  ) {\n    // Invalid token, get a new one.\n    try {\n      await requestDeleteToken(\n        messaging.firebaseDependencies!,\n        tokenDetails.token\n      );\n    } catch (e) {\n      // Suppress errors because of #2364\n      console.warn(e);\n    }\n\n    return getNewToken(messaging.firebaseDependencies!, subscriptionOptions);\n  } else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\n    // Weekly token refresh\n    return updateToken(messaging, {\n      token: tokenDetails.token,\n      createTime: Date.now(),\n      subscriptionOptions\n    });\n  } else {\n    // Valid token, nothing to do.\n    return tokenDetails.token;\n  }\n}\n\n/**\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\n * the push subscription if it exists.\n */\nexport async function deleteTokenInternal(\n  messaging: MessagingService\n): Promise<boolean> {\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (tokenDetails) {\n    await requestDeleteToken(\n      messaging.firebaseDependencies,\n      tokenDetails.token\n    );\n    await dbRemove(messaging.firebaseDependencies);\n  }\n\n  // Unsubscribe from the push subscription.\n  const pushSubscription =\n    await messaging.swRegistration!.pushManager.getSubscription();\n  if (pushSubscription) {\n    return pushSubscription.unsubscribe();\n  }\n\n  // If there's no SW, consider it a success.\n  return true;\n}\n\nasync function updateToken(\n  messaging: MessagingService,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  try {\n    const updatedToken = await requestUpdateToken(\n      messaging.firebaseDependencies,\n      tokenDetails\n    );\n\n    const updatedTokenDetails: TokenDetails = {\n      ...tokenDetails,\n      token: updatedToken,\n      createTime: Date.now()\n    };\n\n    await dbSet(messaging.firebaseDependencies, updatedTokenDetails);\n    return updatedToken;\n  } catch (e) {\n    await deleteTokenInternal(messaging);\n    throw e;\n  }\n}\n\nasync function getNewToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const token = await requestGetToken(\n    firebaseDependencies,\n    subscriptionOptions\n  );\n  const tokenDetails: TokenDetails = {\n    token,\n    createTime: Date.now(),\n    subscriptionOptions\n  };\n  await dbSet(firebaseDependencies, tokenDetails);\n  return tokenDetails.token;\n}\n\n/**\n * Gets a PushSubscription for the current user.\n */\nasync function getPushSubscription(\n  swRegistration: ServiceWorkerRegistration,\n  vapidKey: string\n): Promise<PushSubscription> {\n  const subscription = await swRegistration.pushManager.getSubscription();\n  if (subscription) {\n    return subscription;\n  }\n\n  return swRegistration.pushManager.subscribe({\n    userVisibleOnly: true,\n    // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n    // submitted to pushManager#subscribe must be of type Uint8Array.\n    applicationServerKey: base64ToArray(vapidKey)\n  });\n}\n\n/**\n * Checks if the saved tokenDetails object matches the configuration provided.\n */\nfunction isTokenValid(\n  dbOptions: SubscriptionOptions,\n  currentOptions: SubscriptionOptions\n): boolean {\n  const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  const isAuthEqual = currentOptions.auth === dbOptions.auth;\n  const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MessagePayload } from '../interfaces/public-types';\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\n\nexport function externalizePayload(\n  internalPayload: MessagePayloadInternal\n): MessagePayload {\n  const payload: MessagePayload = {\n    from: internalPayload.from,\n    // eslint-disable-next-line camelcase\n    collapseKey: internalPayload.collapse_key,\n    // eslint-disable-next-line camelcase\n    messageId: internalPayload.fcmMessageId\n  } as MessagePayload;\n\n  propagateNotificationPayload(payload, internalPayload);\n  propagateDataPayload(payload, internalPayload);\n  propagateFcmOptions(payload, internalPayload);\n\n  return payload;\n}\n\nfunction propagateNotificationPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.notification) {\n    return;\n  }\n\n  payload.notification = {};\n\n  const title = messagePayloadInternal.notification!.title;\n  if (!!title) {\n    payload.notification!.title = title;\n  }\n\n  const body = messagePayloadInternal.notification!.body;\n  if (!!body) {\n    payload.notification!.body = body;\n  }\n\n  const image = messagePayloadInternal.notification!.image;\n  if (!!image) {\n    payload.notification!.image = image;\n  }\n\n  const icon = messagePayloadInternal.notification!.icon;\n  if (!!icon) {\n    payload.notification!.icon = icon;\n  }\n}\n\nfunction propagateDataPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.data) {\n    return;\n  }\n\n  payload.data = messagePayloadInternal.data as { [key: string]: string };\n}\n\nfunction propagateFcmOptions(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  // fcmOptions.link value is written into notification.click_action. see more in b/232072111\n  if (\n    !messagePayloadInternal.fcmOptions &&\n    !messagePayloadInternal.notification?.click_action\n  ) {\n    return;\n  }\n\n  payload.fcmOptions = {};\n\n  const link =\n    messagePayloadInternal.fcmOptions?.link ??\n    messagePayloadInternal.notification?.click_action;\n\n  if (!!link) {\n    payload.fcmOptions!.link = link;\n  }\n\n  // eslint-disable-next-line camelcase\n  const analyticsLabel = messagePayloadInternal.fcmOptions?.analytics_label;\n  if (!!analyticsLabel) {\n    payload.fcmOptions!.analyticsLabel = analyticsLabel;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSOLE_CAMPAIGN_ID } from '../util/constants';\nimport { ConsoleMessageData } from '../interfaces/internal-message-payload';\n\nexport function isConsoleMessage(data: unknown): data is ConsoleMessageData {\n  // This message has a campaign ID, meaning it was sent using the Firebase Console.\n  return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_BACKOFF_TIME_MS,\n  EVENT_MESSAGE_DELIVERED,\n  FCM_LOG_SOURCE,\n  LOG_INTERVAL_IN_MS,\n  MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST,\n  MAX_RETRIES,\n  MessageType,\n  SDK_PLATFORM_WEB\n} from '../util/constants';\nimport {\n  FcmEvent,\n  LogEvent,\n  LogRequest,\n  LogResponse\n} from '../interfaces/logging-types';\n\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\nimport { MessagingService } from '../messaging-service';\n\nconst FIRELOG_ENDPOINT = _mergeStrings(\n  'hts/frbslgigp.ogepscmv/ieo/eaylg',\n  'tp:/ieaeogn-agolai.o/1frlglgc/o'\n);\n\nconst FCM_TRANSPORT_KEY = _mergeStrings(\n  'AzSCbw63g1R0nCw85jG8',\n  'Iaya3yLKwmgvh7cF0q4'\n);\n\nexport function startLoggingService(messaging: MessagingService): void {\n  if (!messaging.isLogServiceStarted) {\n    _processQueue(messaging, LOG_INTERVAL_IN_MS);\n    messaging.isLogServiceStarted = true;\n  }\n}\n\n/**\n *\n * @param messaging the messaging instance.\n * @param offsetInMs this method execute after `offsetInMs` elapsed .\n */\nexport function _processQueue(\n  messaging: MessagingService,\n  offsetInMs: number\n): void {\n  setTimeout(async () => {\n    if (!messaging.deliveryMetricsExportedToBigQueryEnabled) {\n      // flush events and terminate logging service\n      messaging.logEvents = [];\n      messaging.isLogServiceStarted = false;\n\n      return;\n    }\n\n    if (!messaging.logEvents.length) {\n      return _processQueue(messaging, LOG_INTERVAL_IN_MS);\n    }\n\n    await _dispatchLogEvents(messaging);\n  }, offsetInMs);\n}\n\nexport async function _dispatchLogEvents(\n  messaging: MessagingService\n): Promise<void> {\n  for (\n    let i = 0, n = messaging.logEvents.length;\n    i < n;\n    i += MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST\n  ) {\n    const logRequest = _createLogRequest(\n      messaging.logEvents.slice(i, i + MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST)\n    );\n\n    let retryCount = 0,\n      response = {} as Response;\n\n    do {\n      try {\n        response = await fetch(\n          FIRELOG_ENDPOINT.concat('?key=', FCM_TRANSPORT_KEY),\n          {\n            method: 'POST',\n            body: JSON.stringify(logRequest)\n          }\n        );\n\n        // don't retry on 200s or non retriable errors\n        if (response.ok || (!response.ok && !isRetriableError(response))) {\n          break;\n        }\n\n        if (!response.ok && isRetriableError(response)) {\n          // rethrow to retry with quota\n          throw new Error(\n            'a retriable Non-200 code is returned in fetch to Firelog endpoint. Retry'\n          );\n        }\n      } catch (error) {\n        const isLastAttempt = retryCount === MAX_RETRIES;\n        if (isLastAttempt) {\n          // existing the do-while interactive retry logic because retry quota has reached.\n          break;\n        }\n      }\n\n      let delayInMs: number;\n      try {\n        delayInMs = Number(\n          ((await response.json()) as LogResponse).nextRequestWaitMillis\n        );\n      } catch (e) {\n        delayInMs = DEFAULT_BACKOFF_TIME_MS;\n      }\n\n      await new Promise(resolve => setTimeout(resolve, delayInMs));\n\n      retryCount++;\n    } while (retryCount < MAX_RETRIES);\n  }\n\n  messaging.logEvents = [];\n  // schedule for next logging\n  _processQueue(messaging, LOG_INTERVAL_IN_MS);\n}\n\nfunction isRetriableError(response: Response): boolean {\n  const httpStatus = response.status;\n\n  return (\n    httpStatus === 429 ||\n    httpStatus === 500 ||\n    httpStatus === 503 ||\n    httpStatus === 504\n  );\n}\n\nexport async function stageLog(\n  messaging: MessagingService,\n  internalPayload: MessagePayloadInternal\n): Promise<void> {\n  const fcmEvent = createFcmEvent(\n    internalPayload,\n    await messaging.firebaseDependencies.installations.getId()\n  );\n\n  createAndEnqueueLogEvent(messaging, fcmEvent);\n}\n\nfunction createFcmEvent(\n  internalPayload: MessagePayloadInternal,\n  fid: string\n): FcmEvent {\n  const fcmEvent = {} as FcmEvent;\n\n  /* eslint-disable camelcase */\n  // some fields should always be non-null. Still check to ensure.\n  if (!!internalPayload.from) {\n    fcmEvent.project_number = internalPayload.from;\n  }\n\n  if (!!internalPayload.fcmMessageId) {\n    fcmEvent.message_id = internalPayload.fcmMessageId;\n  }\n\n  fcmEvent.instance_id = fid;\n\n  if (!!internalPayload.notification) {\n    fcmEvent.message_type = MessageType.DISPLAY_NOTIFICATION.toString();\n  } else {\n    fcmEvent.message_type = MessageType.DATA_MESSAGE.toString();\n  }\n\n  fcmEvent.sdk_platform = SDK_PLATFORM_WEB.toString();\n  fcmEvent.package_name = self.origin.replace(/(^\\w+:|^)\\/\\//, '');\n\n  if (!!internalPayload.collapse_key) {\n    fcmEvent.collapse_key = internalPayload.collapse_key;\n  }\n\n  fcmEvent.event = EVENT_MESSAGE_DELIVERED.toString();\n\n  if (!!internalPayload.fcmOptions?.analytics_label) {\n    fcmEvent.analytics_label = internalPayload.fcmOptions?.analytics_label;\n  }\n\n  /* eslint-enable camelcase */\n  return fcmEvent;\n}\n\nfunction createAndEnqueueLogEvent(\n  messaging: MessagingService,\n  fcmEvent: FcmEvent\n): void {\n  const logEvent = {} as LogEvent;\n\n  /* eslint-disable camelcase */\n  logEvent.event_time_ms = Math.floor(Date.now()).toString();\n  logEvent.source_extension_json_proto3 = JSON.stringify(fcmEvent);\n  // eslint-disable-next-line camelcase\n\n  messaging.logEvents.push(logEvent);\n}\n\nexport function _createLogRequest(logEventQueue: LogEvent[]): LogRequest {\n  const logRequest = {} as LogRequest;\n\n  /* eslint-disable camelcase */\n  logRequest.log_source = FCM_LOG_SOURCE.toString();\n  logRequest.log_event = logEventQueue;\n  /* eslint-enable camelcase */\n\n  return logRequest;\n}\n\nexport function _mergeStrings(s1: string, s2: string): string {\n  const resultArray = [];\n  for (let i = 0; i < s1.length; i++) {\n    resultArray.push(s1.charAt(i));\n    if (i < s2.length) {\n      resultArray.push(s2.charAt(i));\n    }\n  }\n\n  return resultArray.join('');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseError } from '@firebase/util';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: ReadonlyArray<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId',\n    'messagingSenderId'\n  ];\n\n  const { options } = app;\n  for (const keyName of configKeys) {\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: options.projectId!,\n    apiKey: options.apiKey!,\n    appId: options.appId!,\n    senderId: options.messagingSenderId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app';\nimport { MessagePayload, NextFn, Observer } from './interfaces/public-types';\n\nimport { FirebaseAnalyticsInternalName } from '@firebase/analytics-interop-types';\nimport { FirebaseInternalDependencies } from './interfaces/internal-dependencies';\nimport { LogEvent } from './interfaces/logging-types';\nimport { Provider } from '@firebase/component';\nimport { _FirebaseInstallationsInternal } from '@firebase/installations';\nimport { extractAppConfig } from './helpers/extract-app-config';\n\nexport class MessagingService implements _FirebaseService {\n  readonly app!: FirebaseApp;\n  readonly firebaseDependencies!: FirebaseInternalDependencies;\n\n  swRegistration?: ServiceWorkerRegistration;\n  vapidKey?: string;\n  // logging is only done with end user consent. Default to false.\n  deliveryMetricsExportedToBigQueryEnabled: boolean = false;\n\n  onBackgroundMessageHandler:\n    | NextFn<MessagePayload>\n    | Observer<MessagePayload>\n    | null = null;\n\n  onMessageHandler: NextFn<MessagePayload> | Observer<MessagePayload> | null =\n    null;\n\n  logEvents: LogEvent[] = [];\n  isLogServiceStarted: boolean = false;\n\n  constructor(\n    app: FirebaseApp,\n    installations: _FirebaseInstallationsInternal,\n    analyticsProvider: Provider<FirebaseAnalyticsInternalName>\n  ) {\n    const appConfig = extractAppConfig(app);\n\n    this.firebaseDependencies = {\n      app,\n      appConfig,\n      installations,\n      analyticsProvider\n    };\n  }\n\n  _delete(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_SW_PATH, DEFAULT_SW_SCOPE } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\n\nexport async function registerDefaultSw(\n  messaging: MessagingService\n): Promise<void> {\n  try {\n    messaging.swRegistration = await navigator.serviceWorker.register(\n      DEFAULT_SW_PATH,\n      {\n        scope: DEFAULT_SW_SCOPE\n      }\n    );\n\n    // The timing when browser updates sw when sw has an update is unreliable from experiment. It\n    // leads to version conflict when the SDK upgrades to a newer version in the main page, but sw\n    // is stuck with the old version. For example,\n    // https://github.com/firebase/firebase-js-sdk/issues/2590 The following line reliably updates\n    // sw if there was an update.\n    messaging.swRegistration.update().catch(() => {\n      /* it is non blocking and we don't care if it failed */\n    });\n  } catch (e) {\n    throw ERROR_FACTORY.create(ErrorCode.FAILED_DEFAULT_REGISTRATION, {\n      browserErrorMessage: (e as Error)?.message\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { registerDefaultSw } from './registerDefaultSw';\n\nexport async function updateSwReg(\n  messaging: MessagingService,\n  swRegistration?: ServiceWorkerRegistration | undefined\n): Promise<void> {\n  if (!swRegistration && !messaging.swRegistration) {\n    await registerDefaultSw(messaging);\n  }\n\n  if (!swRegistration && !!messaging.swRegistration) {\n    return;\n  }\n\n  if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n    throw ERROR_FACTORY.create(ErrorCode.INVALID_SW_REGISTRATION);\n  }\n\n  messaging.swRegistration = swRegistration;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY } from '../util/constants';\nimport { MessagingService } from '../messaging-service';\n\nexport async function updateVapidKey(\n  messaging: MessagingService,\n  vapidKey?: string | undefined\n): Promise<void> {\n  if (!!vapidKey) {\n    messaging.vapidKey = vapidKey;\n  } else if (!messaging.vapidKey) {\n    messaging.vapidKey = DEFAULT_VAPID_KEY;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { getTokenInternal } from '../internals/token-manager';\nimport { updateSwReg } from '../helpers/updateSwReg';\nimport { updateVapidKey } from '../helpers/updateVapidKey';\nimport { GetTokenOptions } from '../interfaces/public-types';\n\nexport async function getToken(\n  messaging: MessagingService,\n  options?: GetTokenOptions\n): Promise<string> {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  if (Notification.permission === 'default') {\n    await Notification.requestPermission();\n  }\n\n  if (Notification.permission !== 'granted') {\n    throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n  }\n\n  await updateVapidKey(messaging, options?.vapidKey);\n  await updateSwReg(messaging, options?.serviceWorkerRegistration);\n\n  return getTokenInternal(messaging);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\nimport {\n  ConsoleMessageData,\n  MessageType\n} from '../interfaces/internal-message-payload';\n\nimport { MessagingService } from '../messaging-service';\n\nexport async function logToScion(\n  messaging: MessagingService,\n  messageType: MessageType,\n  data: ConsoleMessageData\n): Promise<void> {\n  const eventType = getEventType(messageType);\n  const analytics =\n    await messaging.firebaseDependencies.analyticsProvider.get();\n  analytics.logEvent(eventType, {\n    /* eslint-disable camelcase */\n    message_id: data[CONSOLE_CAMPAIGN_ID],\n    message_name: data[CONSOLE_CAMPAIGN_NAME],\n    message_time: data[CONSOLE_CAMPAIGN_TIME],\n    message_device_time: Math.floor(Date.now() / 1000)\n    /* eslint-enable camelcase */\n  });\n}\n\nfunction getEventType(messageType: MessageType): string {\n  switch (messageType) {\n    case MessageType.NOTIFICATION_CLICKED:\n      return 'notification_open';\n    case MessageType.PUSH_RECEIVED:\n      return 'notification_foreground';\n    default:\n      throw new Error();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  MessagePayloadInternal,\n  MessageType\n} from '../interfaces/internal-message-payload';\n\nimport { CONSOLE_CAMPAIGN_ANALYTICS_ENABLED } from '../util/constants';\nimport { MessagingService } from '../messaging-service';\nimport { externalizePayload } from '../helpers/externalizePayload';\nimport { isConsoleMessage } from '../helpers/is-console-message';\nimport { logToScion } from '../helpers/logToScion';\n\nexport async function messageEventListener(\n  messaging: MessagingService,\n  event: MessageEvent\n): Promise<void> {\n  const internalPayload = event.data as MessagePayloadInternal;\n\n  if (!internalPayload.isFirebaseMessaging) {\n    return;\n  }\n\n  if (\n    messaging.onMessageHandler &&\n    internalPayload.messageType === MessageType.PUSH_RECEIVED\n  ) {\n    if (typeof messaging.onMessageHandler === 'function') {\n      messaging.onMessageHandler(externalizePayload(internalPayload));\n    } else {\n      messaging.onMessageHandler.next(externalizePayload(internalPayload));\n    }\n  }\n\n  // Log to Scion if applicable\n  const dataPayload = internalPayload.data;\n  if (\n    isConsoleMessage(dataPayload) &&\n    dataPayload[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1'\n  ) {\n    await logToScion(messaging, internalPayload.messageType!, dataPayload);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstanceFactory\n} from '@firebase/component';\nimport {\n  onNotificationClick,\n  onPush,\n  onSubChange\n} from '../listeners/sw-listeners';\n\nimport { GetTokenOptions } from '../interfaces/public-types';\nimport { MessagingInternal } from '@firebase/messaging-interop-types';\nimport { MessagingService } from '../messaging-service';\nimport { ServiceWorkerGlobalScope } from '../util/sw-types';\nimport { _registerComponent, registerVersion } from '@firebase/app';\nimport { getToken } from '../api/getToken';\nimport { messageEventListener } from '../listeners/window-listener';\n\nimport { name, version } from '../../package.json';\n\nconst WindowMessagingFactory: InstanceFactory<'messaging'> = (\n  container: ComponentContainer\n) => {\n  const messaging = new MessagingService(\n    container.getProvider('app').getImmediate(),\n    container.getProvider('installations-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n\n  navigator.serviceWorker.addEventListener('message', e =>\n    messageEventListener(messaging as MessagingService, e)\n  );\n\n  return messaging;\n};\n\nconst WindowMessagingInternalFactory: InstanceFactory<'messaging-internal'> = (\n  container: ComponentContainer\n) => {\n  const messaging = container\n    .getProvider('messaging')\n    .getImmediate() as MessagingService;\n\n  const messagingInternal: MessagingInternal = {\n    getToken: (options?: GetTokenOptions) => getToken(messaging, options)\n  };\n\n  return messagingInternal;\n};\n\ndeclare const self: ServiceWorkerGlobalScope;\nconst SwMessagingFactory: InstanceFactory<'messaging'> = (\n  container: ComponentContainer\n) => {\n  const messaging = new MessagingService(\n    container.getProvider('app').getImmediate(),\n    container.getProvider('installations-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n\n  self.addEventListener('push', e => {\n    e.waitUntil(onPush(e, messaging as MessagingService));\n  });\n  self.addEventListener('pushsubscriptionchange', e => {\n    e.waitUntil(onSubChange(e, messaging as MessagingService));\n  });\n  self.addEventListener('notificationclick', e => {\n    e.waitUntil(onNotificationClick(e));\n  });\n\n  return messaging;\n};\n\nexport function registerMessagingInWindow(): void {\n  _registerComponent(\n    new Component('messaging', WindowMessagingFactory, ComponentType.PUBLIC)\n  );\n\n  _registerComponent(\n    new Component(\n      'messaging-internal',\n      WindowMessagingInternalFactory,\n      ComponentType.PRIVATE\n    )\n  );\n\n  registerVersion(name, version);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n\n/**\n * The messaging instance registered in sw is named differently than that of in client. This is\n * because both `registerMessagingInWindow` and `registerMessagingInSw` would be called in\n * `messaging-compat` and component with the same name can only be registered once.\n */\nexport function registerMessagingInSw(): void {\n  _registerComponent(\n    new Component('messaging-sw', SwMessagingFactory, ComponentType.PUBLIC)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  areCookiesEnabled,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\n\n/**\n * Checks if all required APIs exist in the browser.\n * @returns a Promise that resolves to a boolean.\n *\n * @public\n */\nexport async function isWindowSupported(): Promise<boolean> {\n  try {\n    // This throws if open() is unsupported, so adding it to the conditional\n    // statement below can cause an uncaught error.\n    await validateIndexedDBOpenable();\n  } catch (e) {\n    return false;\n  }\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return (\n    typeof window !== 'undefined' &&\n    isIndexedDBAvailable() &&\n    areCookiesEnabled() &&\n    'serviceWorker' in navigator &&\n    'PushManager' in window &&\n    'Notification' in window &&\n    'fetch' in window &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n\n/**\n * Checks whether all required APIs exist within SW Context\n * @returns a Promise that resolves to a boolean.\n *\n * @public\n */\nexport async function isSwSupported(): Promise<boolean> {\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return (\n    isIndexedDBAvailable() &&\n    (await validateIndexedDBOpenable()) &&\n    'PushManager' in self &&\n    'Notification' in self &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { deleteTokenInternal } from '../internals/token-manager';\nimport { registerDefaultSw } from '../helpers/registerDefaultSw';\n\nexport async function deleteToken(\n  messaging: MessagingService\n): Promise<boolean> {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  if (!messaging.swRegistration) {\n    await registerDefaultSw(messaging);\n  }\n\n  return deleteTokenInternal(messaging);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from './util/errors';\nimport { FirebaseApp, _getProvider, getApp } from '@firebase/app';\nimport {\n  GetTokenOptions,\n  MessagePayload,\n  Messaging\n} from './interfaces/public-types';\nimport {\n  NextFn,\n  Observer,\n  Unsubscribe,\n  getModularInstance\n} from '@firebase/util';\nimport { isSwSupported, isWindowSupported } from './api/isSupported';\n\nimport { MessagingService } from './messaging-service';\nimport { deleteToken as _deleteToken } from './api/deleteToken';\nimport { getToken as _getToken } from './api/getToken';\nimport { onBackgroundMessage as _onBackgroundMessage } from './api/onBackgroundMessage';\nimport { onMessage as _onMessage } from './api/onMessage';\nimport { _setDeliveryMetricsExportedToBigQueryEnabled } from './api/setDeliveryMetricsExportedToBigQueryEnabled';\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInWindow(app: FirebaseApp = getApp()): Messaging {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isWindowSupported().then(\n    isSupported => {\n      // If `isWindowSupported()` resolved, but returned false.\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    },\n    _ => {\n      // If `isWindowSupported()` rejected.\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    }\n  );\n  return _getProvider(getModularInstance(app), 'messaging').getImmediate();\n}\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInSw(app: FirebaseApp = getApp()): Messaging {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isSwSupported().then(\n    isSupported => {\n      // If `isSwSupported()` resolved, but returned false.\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    },\n    _ => {\n      // If `isSwSupported()` rejected.\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    }\n  );\n  return _getProvider(getModularInstance(app), 'messaging-sw').getImmediate();\n}\n\n/**\n * Subscribes the {@link Messaging} instance to push notifications. Returns an Firebase Cloud\n * Messaging registration token that can be used to send push messages to that {@link Messaging}\n * instance.\n *\n * If a notification permission isn't already granted, this method asks the user for permission. The\n * returned promise rejects if the user does not allow the app to show notifications.\n *\n * @param messaging - The {@link Messaging} instance.\n * @param options - Provides an optional vapid key and an optinoal service worker registration\n *\n * @returns The promise resolves with an FCM registration token.\n *\n * @public\n */\nexport async function getToken(\n  messaging: Messaging,\n  options?: GetTokenOptions\n): Promise<string> {\n  messaging = getModularInstance(messaging);\n  return _getToken(messaging as MessagingService, options);\n}\n\n/**\n * Deletes the registration token associated with this {@link Messaging} instance and unsubscribes\n * the {@link Messaging} instance from the push subscription.\n *\n * @param messaging - The {@link Messaging} instance.\n *\n * @returns The promise resolves when the token has been successfully deleted.\n *\n * @public\n */\nexport function deleteToken(messaging: Messaging): Promise<boolean> {\n  messaging = getModularInstance(messaging);\n  return _deleteToken(messaging as MessagingService);\n}\n\n/**\n * When a push message is received and the user is currently on a page for your origin, the\n * message is passed to the page and an `onMessage()` event is dispatched with the payload of\n * the push message.\n *\n *\n * @param messaging - The {@link Messaging} instance.\n * @param nextOrObserver - This function, or observer object with `next` defined,\n *     is called when a message is received and the user is currently viewing your page.\n * @returns To stop listening for messages execute this returned function.\n *\n * @public\n */\nexport function onMessage(\n  messaging: Messaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onMessage(messaging as MessagingService, nextOrObserver);\n}\n\n/**\n * Called when a message is received while the app is in the background. An app is considered to be\n * in the background if no active window is displayed.\n *\n * @param messaging - The {@link Messaging} instance.\n * @param nextOrObserver - This function, or observer object with `next` defined, is called when a\n * message is received and the app is currently in the background.\n *\n * @returns To stop listening for messages execute this returned function\n *\n * @public\n */\nexport function onBackgroundMessage(\n  messaging: Messaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onBackgroundMessage(messaging as MessagingService, nextOrObserver);\n}\n\n/**\n * Enables or disables Firebase Cloud Messaging message delivery metrics export to BigQuery. By\n * default, message delivery metrics are not exported to BigQuery. Use this method to enable or\n * disable the export at runtime.\n *\n * @param messaging - The `FirebaseMessaging` instance.\n * @param enable - Whether Firebase Cloud Messaging should export message delivery metrics to\n * BigQuery.\n *\n * @public\n */\nexport function experimentalSetDeliveryMetricsExportedToBigQueryEnabled(\n  messaging: Messaging,\n  enable: boolean\n): void {\n  messaging = getModularInstance(messaging);\n  return _setDeliveryMetricsExportedToBigQueryEnabled(messaging, enable);\n}\n","import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter((key) => options[key] !== undefined)\n    .map((key) => {\n      return `${key}_${\n        key === 'root' ? getRootId(options.root) : options[key]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport type { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const { inView, entry } = this.state;\n      return this.props.children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      children,\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from 'react';\nimport type { InViewHookResponse, IntersectionOptions } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions['onChange']>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n\n  React.useEffect(() => {\n    if (!ref && entryTarget && !triggerOnce && !skip) {\n      // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView,\n        entry: undefined,\n      });\n    }\n  }, [ref, entryTarget, triggerOnce, skip, initialInView]);\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["stringToByteArray","str","out","p","i","length","c","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","this","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","replace","base64Decode","e","console","error","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","Promise","resolve","reject","preExist","DB_CHECK_NAME","request","self","open","onsuccess","result","close","deleteDatabase","onupgradeneeded","onerror","message","areCookiesEnabled","navigator","cookieEnabled","getDefaultsFromGlobal","window","global","getGlobal","__FIREBASE_DEFAULTS__","getDefaults","process","defaultsJsonString","JSON","parse","getDefaultsFromEnvVariable","document","match","cookie","decoded","getDefaultsFromCookie","info","getDefaultAppConfig","config","Deferred","promise","callback","value","catch","FirebaseError","code","customData","name","Object","setPrototypeOf","prototype","captureStackTrace","ErrorFactory","create","service","serviceName","errors","fullCode","template","replaceTemplate","fullMessage","data","PATTERN","_","key","deepEqual","a","b","aKeys","keys","bKeys","k","includes","aProp","bProp","isObject","thing","getModularInstance","_delegate","__assign","assign","t","s","n","arguments","hasOwnProperty","call","apply","__createBinding","o","m","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","__importStar","mod","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","exports","React","require","unitConverter_1","animation_1","colors_1","long","createAnimation","short","_a","_b","loading","_c","color","_d","speedMultiplier","_e","cssOverride","_f","height","_g","width","additionalprops","wrapper","display","position","cssValue","overflow","backgroundColor","calculateRgba","backgroundClip","style","borderRadius","willChange","animationFillMode","animation","concat","createElement","BasicColors","opacity","slice","res_1","split","forEach","rgbValues","map","hex","parseInt","_createForOfIteratorHelper","allowArrayLike","it","Symbol","iterator","F","done","f","TypeError","err","normalCompletion","didErr","step","next","_e2","LogLevel","instances","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","instance","logType","logLevel","now","Date","toISOString","method","args","Logger","_logLevel","val","_logHandler","_userLogHandler","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","target","prop","receiver","IDBTransaction","objectStoreNames","objectStore","wrap","set","has","wrapFunction","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","unwrap","storeNames","tx","sort","transformCachableValue","unlisten","removeEventListener","complete","DOMException","addEventListener","cacheDonePromiseForTransaction","object","IDBObjectStore","IDBIndex","some","Proxy","IDBRequest","success","then","promisifyRequest","newValue","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","useIndex","isWrite","storeName","store","index","shift","all","oldTraps","PlatformLoggerServiceImpl","container","getProviders","provider","component","getComponent","type","isVersionServiceProvider","getImmediate","library","version","filter","logString","logger","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","appName","_apps","_components","_addComponent","app","addComponent","debug","_registerComponent","componentName","values","_getProvider","heartbeatController","getProvider","optional","triggerHeartbeat","ERRORS","ERROR_FACTORY","FirebaseAppImpl","options","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","Component","checkDestroyed","_isDeleted","isDeleted","initializeApp","rawConfig","existingApp","ComponentContainer","newApp","getApp","registerVersion","libraryKeyOrName","variant","libraryMismatch","versionMismatch","warning","warn","STORE_NAME","dbPromise","getDbPromise","blocked","upgrade","blocking","terminated","openPromise","event","oldVersion","newVersion","db","openDB","createObjectStore","originalErrorMessage","readHeartbeatsFromIndexedDB","computeKey","idbGetError","writeHeartbeatsToIndexedDB","heartbeatObject","put","appId","HeartbeatServiceImpl","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","_heartbeatsCache","platformLogger","agent","getPlatformInfoString","date","getUTCDateString","lastSentHeartbeatDate","heartbeats","singleDateHeartbeat","hbTimestamp","valueOf","overwrite","extractHeartbeatsForHeader","heartbeatsToSend","unsentEntries","headerString","stringify","substring","heartbeatsCache","maxSize","heartbeatEntry","find","hb","dates","countBytes","pop","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","idbHeartbeatObject","heartbeatsObject","existingHeartbeatsObject","instanceFactory","instantiationMode","mode","multipleInstances","props","serviceProps","onInstanceCreated","Provider","instancesDeferred","instancesOptions","onInitCallbacks","identifier","normalizedIdentifier","normalizeInstanceIdentifier","deferred","isInitialized","shouldAutoInitialize","getOrInitializeService","instanceIdentifier","isComponentEager","entries","instanceDeferred","delete","services","from","INTERNAL","_delete","opts","isComponentSet","normalizedDeferredIdentifier","existingCallbacks","Set","add","existingInstance","callbacks","invokeOnInitCallbacks","providers","setComponent","PENDING_TIMEOUT_MS","PACKAGE_VERSION","INTERNAL_AUTH_VERSION","TOKEN_EXPIRATION_BUFFER","ERROR_DESCRIPTION_MAP","isServerError","getInstallationsEndpoint","projectId","extractAuthTokenInfoFromResponse","response","token","requestStatus","expiresIn","responseExpiresIn","Number","creationTime","getErrorFromResponse","requestName","json","responseJson","errorData","serverCode","serverMessage","serverStatus","status","getHeaders","apiKey","Headers","Accept","getHeadersWithAuth","appConfig","refreshToken","headers","append","getAuthorizationHeader","retryIfServerError","fn","createInstallationRequest","heartbeatServiceProvider","fid","endpoint","heartbeatService","getHeartbeatsHeader","heartbeatsHeader","body","authVersion","sdkVersion","fetch","ok","responseValue","registeredInstallationEntry","registrationStatus","authToken","sleep","ms","setTimeout","VALID_FID_PATTERN","generateFid","fidByteArray","Uint8Array","crypto","msCrypto","getRandomValues","b64String","array","substr","encode","test","getKey","fidChangeCallbacks","fidChanged","callFidChangeCallbacks","channel","getBroadcastChannel","postMessage","closeBroadcastChannel","broadcastFidChange","broadcastChannel","BroadcastChannel","onmessage","size","OBJECT_STORE_NAME","oldValue","remove","update","updateFn","getInstallationEntry","installations","oldEntry","installationEntry","updateOrCreateInstallationEntry","entryWithPromise","triggerRegistrationIfNecessary","registrationPromise","clearTimedOutRequest","onLine","inProgressEntry","registrationTime","registerInstallation","waitUntilFidRegistration","updateInstallationRequest","entry","generateAuthTokenRequest","getGenerateAuthTokenEndpoint","installation","completedAuthToken","refreshAuthToken","forceRefresh","isEntryRegistered","oldAuthToken","isAuthTokenValid","tokenPromise","waitUntilAuthTokenRequest","makeAuthTokenRequestInProgressEntry","fetchAuthTokenFromServer","updateAuthTokenRequest","requestTime","updatedInstallationEntry","isAuthTokenExpired","inProgressAuthToken","installationsImpl","completeInstallationRegistration","getMissingValueError","valueName","INSTALLATIONS_NAME","publicFactory","keyName","extractAppConfig","internalFactory","installationsInternal","getId","getToken","deleteDB","replaceTraps","MessageType","DEFAULT_SW_PATH","DEFAULT_SW_SCOPE","DEFAULT_VAPID_KEY","CONSOLE_CAMPAIGN_ID","CONSOLE_CAMPAIGN_NAME","CONSOLE_CAMPAIGN_TIME","CONSOLE_CAMPAIGN_ANALYTICS_ENABLED","arrayToBase64","uint8Array","base64ToArray","base64String","repeat","rawData","outputArray","OLD_DB_NAME","OLD_OBJECT_STORE_NAME","migrateOldDatabase","senderId","databases","dbNames","tokenDetails","upgradeTransaction","contains","clear","oldDetails","auth","p256dh","fcmToken","createTime","subscriptionOptions","swScope","vapidKey","checkTokenDetails","upgradeDb","dbGet","firebaseDependencies","oldTokenDetails","dbSet","dbRemove","ERROR_MAP","requestGetToken","getBody","subscribeOptions","getEndpoint","responseData","errorInfo","toString","requestUpdateToken","updateOptions","requestDeleteToken","unsubscribeOptions","web","applicationPubKey","TOKEN_EXPIRATION_MS","getTokenInternal","messaging","getPushSubscription","swRegistration","pushSubscription","scope","getNewToken","isTokenValid","updateToken","deleteTokenInternal","pushManager","getSubscription","unsubscribe","updatedToken","updatedTokenDetails","subscription","subscribe","userVisibleOnly","applicationServerKey","dbOptions","currentOptions","isVapidKeyEqual","isEndpointEqual","isAuthEqual","isP256dhEqual","externalizePayload","internalPayload","payload","collapseKey","collapse_key","messageId","fcmMessageId","messagePayloadInternal","notification","title","image","icon","propagateNotificationPayload","propagateDataPayload","fcmOptions","click_action","link","analyticsLabel","analytics_label","propagateFcmOptions","isConsoleMessage","_mergeStrings","s1","s2","resultArray","MessagingService","analyticsProvider","messagingSenderId","registerDefaultSw","serviceWorker","register","browserErrorMessage","updateSwReg","ServiceWorkerRegistration","updateVapidKey","Notification","permission","requestPermission","serviceWorkerRegistration","logToScion","messageType","eventType","getEventType","logEvent","message_id","message_name","message_time","message_device_time","Math","floor","NOTIFICATION_CLICKED","PUSH_RECEIVED","isFirebaseMessaging","onMessageHandler","dataPayload","WindowMessagingFactory","messageEventListener","WindowMessagingInternalFactory","isWindowSupported","PushSubscription","getMessagingInWindow","isSupported","_getToken","observerMap","RootIds","rootId","unsupportedValue","optionsToId","root","createObserver","id","thresholds","elements","observer","IntersectionObserver","inView","isIntersecting","threshold","intersectionRatio","trackVisibility","isVisible","observe","element","fallbackInView","bounds","getBoundingClientRect","time","boundingClientRect","intersectionRect","rootBounds","splice","unobserve","disconnect","isPlainChildren","children","useInView","delay","rootMargin","triggerOnce","skip","initialInView","onChange","ref","setRef","state","setState","current","entryTarget","_state$entry"],"sourceRoot":""}